<?xml version="1.0"?>
<launch>
    <!-- Arguments available to run this -->
    <arg name="robot_name" default="object_iiwa"/>
    <arg name="gui" default="true"/>
    <arg name="hardware_interface" default="EffortJointInterface"/>
    <arg name="robot_description" default="$(find iiwa_description)/urdf/object_iiwa.urdf.xacro" />
    <arg name="mass" default="1.083"/>
    <arg name="initial_z" default="0.0" />
    <arg name="rviz" default="false" />
  
    <!--Ros controllers -->
    
    <group ns="$(arg robot_name)">
        <arg name="controllers" default="joint_state_controller $(arg hardware_interface)_trajectory_controller"/>
        <rosparam command="load" file="$(find iiwa_control)/config/object_iiwa_joint_names.yaml" />
        <rosparam file="$(find iiwa_control)/config/object_iiwa_controller.yaml" command="load" />
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" args="$(arg controllers) --shutdown-timeout 2" />
    </group>
        
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" type="string" value="" />
    </node>
    
    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="false" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="headless" value="false"/>
    </include>
    <!-- Load the URDF with the given hardware interface into the ROS Parameter Server -->
    <param name="robot_description" command="xacro --inorder '$(arg robot_description)' hardware_interface:=$(arg hardware_interface) robot_name:=$(arg robot_name) initial_z:=$(arg initial_z) mass:=$(arg mass)" />
    
    <!-- Run a python script to send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model $(arg robot_name) -param robot_description "/>
     
    <node name="static_tf_pub_world_to_gazebo_world" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0  0 0 0 1 map world" />

    <!-- **Add node to launch file -->
    <node name="iiwa_traj_cw3" pkg="cw3q5" type="cw3q5b_node.py" args="" output="screen"/>

    <group if="$(arg rviz)">
    <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false" args="-d $(find cw3_launch)/config/object_iiwa14.rviz" output="screen"/>
    </group>

</launch>
